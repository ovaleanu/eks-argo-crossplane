apiVersion: apiextensions.crossplane.io/v1
kind: Composition
metadata:
  name: xvpcsubnets-networkid.network.ovsandbox.com
  labels:
    crossplane.io/xrd: xvpcsubnets.network.ovsandbox.com
    ovsandbox.com/environment: dev
    ovsandbox.com/network-id: "true"
    ovsandbox.com/provider: aws
    service: vpcsubnet
spec:
  compositeTypeRef:
    apiVersion: network.ovsandbox.com/v1alpha1
    kind: XVpcSubnet
  patchSets:
    - name: common-parameters
      patches:
        - fromFieldPath: spec.resourceConfig.providerConfigName
          toFieldPath: spec.providerConfigRef.name
          type: FromCompositeFieldPath
        - fromFieldPath: spec.resourceConfig.deletionPolicy
          toFieldPath: spec.deletionPolicy
          type: FromCompositeFieldPath
        - fromFieldPath: spec.resourceConfig.region
          toFieldPath: spec.forProvider.region
          type: FromCompositeFieldPath
        - type: FromCompositeFieldPath
          fromFieldPath: spec.networkId
          toFieldPath: metadata.labels[network.awsblueprints.io/network-id]
  resources:
    - name: vpc
      base:
        apiVersion: ec2.aws.crossplane.io/v1beta1
        kind: VPC
        metadata:
          labels:
            type: xcluster-vpc
        spec:
          forProvider:
            amazonProvidedIpv6CidrBlock:
            cidrBlock:
            enableDnsHostNames:
            enableDnsSupport:
            instanceTenancy:
            ipv6CidrBlock:
            ipv6Pool:
            tags:
              - key: Name
      patches:
        - patchSetName: common-parameters
          type: PatchSet
        - fromFieldPath: spec.parameters.vpc-cidrBlock
          toFieldPath: spec.forProvider.cidrBlock
          type: FromCompositeFieldPath
        - fromFieldPath: spec.parameters.vpc-Name
          toFieldPath: "spec.forProvider.tags[0].value"
          type: FromCompositeFieldPath
        - fromFieldPath: spec.parameters.vpc-enableDnsSupport
          toFieldPath: spec.forProvider.enableDnsSupport
          type: FromCompositeFieldPath
        - fromFieldPath: spec.parameters.vpc-enableDnsHostNames
          toFieldPath: spec.forProvider.enableDnsHostNames
          type: FromCompositeFieldPath
        - fromFieldPath: spec.parameters.vpc-amazonProvidedIpv6CidrBlock
          toFieldPath: spec.forProvider.amazonProvidedIpv6CidrBlock
          type: FromCompositeFieldPath
        - fromFieldPath: spec.parameters.vpc-instanceTenancy
          toFieldPath: spec.forProvider.instanceTenancy
          type: FromCompositeFieldPath
        - fromFieldPath: spec.parameters.vpc-ipv6CidrBlock
          toFieldPath: spec.forProvider.ipv6CidrBlock
          type: FromCompositeFieldPath
        - fromFieldPath: spec.parameters.vpc-ipv6Pool
          toFieldPath: spec.forProvider.ipv6Pool
          type: FromCompositeFieldPath
      readinessChecks:
        - matchCondition:
            status: "True"
            type: Ready
          type: MatchCondition

    - name: public-subnet1
      base:
        apiVersion: ec2.aws.crossplane.io/v1beta1
        kind: Subnet
        metadata:
          labels:
            type: subnet
            visibility: public
        spec:
          forProvider:
            availabilityZone:
            cidrBlock:
            ipv6CIDRBlock:
            mapPublicIpOnLaunch: true
            tags:
              - key: Name
              - key: kubernetes.io/role/elb
                value: "1"
            vpcIdSelector:
              matchControllerRef: true
      patches:
        - fromFieldPath: spec.parameters.vpc-Name
          policy:
            fromFieldPath: Required
          toFieldPath: "spec.forProvider.tags[0].value"
          transforms:
            - string:
                fmt: public-subnet1-%s
                type: Format
              type: string
          type: FromCompositeFieldPath
        - patchSetName: common-parameters
          type: PatchSet
        - fromFieldPath: spec.parameters.publicSubnet1-cidrBlock
          toFieldPath: spec.forProvider.cidrBlock
          type: FromCompositeFieldPath
        - fromFieldPath: spec.parameters.publicSubnet1-ipv6CIDRBlock
          toFieldPath: spec.forProvider.ipv6CIDRBlock
          type: FromCompositeFieldPath
        - fromFieldPath: spec.parameters.publicSubnet1-availabilityZone
          toFieldPath: spec.forProvider.availabilityZone
          type: FromCompositeFieldPath
        - fromFieldPath: spec.parameters.publicSubnet1-availabilityZone
          toFieldPath: metadata.labels.zone
          type: FromCompositeFieldPath
      readinessChecks:
        - matchCondition:
            status: "True"
            type: Ready
          type: MatchCondition

    - name: additionalEKSSecurityGroup
      base:
        apiVersion: ec2.aws.crossplane.io/v1beta1
        kind: SecurityGroup
        metadata:
          labels:
            type: xcluster-security-group
        spec:
          forProvider:
            description: Allow access to vcluster nodegroups
            egress:
              - fromPort: -1
                ipProtocol: "-1"
                ipRanges:
                  - cidrIp: 0.0.0.0/0
                toPort: -1
            groupName: additional-eks-security-group
            ingress:
              - fromPort: -1
                ipProtocol: "-1"
                ipRanges:
                  - cidrIp: 0.0.0.0/0
                toPort: -1
              - fromPort: -1
                ipProtocol: "-1"
                ipRanges:
                  - cidrIp: 10.20.0.0/17
                    description: Allow VPC Network
                toPort: -1
              - fromPort: 443
                ipProtocol: tcp
                ipRanges:
                  - cidrIp: 0.0.0.0/0
                    description: Allow pods to communicate with the cluster API Server
                toPort: 443
            vpcIdSelector:
              matchControllerRef: false
              matchLabels:
                type: xcluster-vpc
      patches:
        - patchSetName: common-parameters
          type: PatchSet
      readinessChecks:
        - matchCondition:
            status: "True"
            type: Ready
          type: MatchCondition

    - name: public-subnet2
      base:
        apiVersion: ec2.aws.crossplane.io/v1beta1
        kind: Subnet
        metadata:
          labels:
            type: subnet
            visibility: public
        spec:
          forProvider:
            availabilityZone:
            cidrBlock:
            ipv6CIDRBlock:
            mapPublicIpOnLaunch: true
            tags:
              - key: Name
              - key: kubernetes.io/role/elb
                value: "1"
            vpcIdSelector:
              matchControllerRef: true
      patches:
        - fromFieldPath: spec.parameters.vpc-Name
          policy:
            fromFieldPath: Required
          toFieldPath: "spec.forProvider.tags[0].value"
          transforms:
            - string:
                fmt: public-subnet2-%s
                type: Format
              type: string
          type: FromCompositeFieldPath
        - patchSetName: common-parameters
          type: PatchSet
        - fromFieldPath: spec.parameters.publicSubnet2-cidrBlock
          toFieldPath: spec.forProvider.cidrBlock
          type: FromCompositeFieldPath
        - fromFieldPath: spec.parameters.publicSubnet2-ipv6CIDRBlock
          toFieldPath: spec.forProvider.ipv6CIDRBlock
          type: FromCompositeFieldPath
        - fromFieldPath: spec.parameters.publicSubnet2-availabilityZone
          toFieldPath: spec.forProvider.availabilityZone
          type: FromCompositeFieldPath
        - fromFieldPath: spec.parameters.publicSubnet2-availabilityZone
          toFieldPath: metadata.labels.zone
          type: FromCompositeFieldPath
      readinessChecks:
        - matchCondition:
            status: "True"
            type: Ready
          type: MatchCondition

    - name: public-subnet3
      base:
        apiVersion: ec2.aws.crossplane.io/v1beta1
        kind: Subnet
        metadata:
          labels:
            type: subnet
            visibility: public
        spec:
          forProvider:
            availabilityZone:
            cidrBlock:
            ipv6CIDRBlock:
            mapPublicIpOnLaunch: true
            tags:
              - key: Name
              - key: kubernetes.io/role/elb
                value: "1"
            vpcIdSelector:
              matchControllerRef: true
      patches:
        - fromFieldPath: spec.parameters.vpc-Name
          policy:
            fromFieldPath: Required
          toFieldPath: "spec.forProvider.tags[0].value"
          transforms:
            - string:
                fmt: public-subnet3-%s
                type: Format
              type: string
          type: FromCompositeFieldPath
        - patchSetName: common-parameters
          type: PatchSet
        - fromFieldPath: spec.parameters.publicSubnet3-cidrBlock
          toFieldPath: spec.forProvider.cidrBlock
          type: FromCompositeFieldPath
        - fromFieldPath: spec.parameters.publicSubnet3-ipv6CIDRBlock
          toFieldPath: spec.forProvider.ipv6CIDRBlock
          type: FromCompositeFieldPath
        - fromFieldPath: spec.parameters.publicSubnet3-availabilityZone
          toFieldPath: spec.forProvider.availabilityZone
          type: FromCompositeFieldPath
        - fromFieldPath: spec.parameters.publicSubnet3-availabilityZone
          toFieldPath: metadata.labels.zone
          type: FromCompositeFieldPath
      readinessChecks:
        - matchCondition:
            status: "True"
            type: Ready
          type: MatchCondition

    - name: private-subnet1
      base:
        apiVersion: ec2.aws.crossplane.io/v1beta1
        kind: Subnet
        metadata:
          labels:
            type: subnet
            visibility: private
        spec:
          forProvider:
            availabilityZone:
            cidrBlock:
            ipv6CIDRBlock:
            mapPublicIpOnLaunch: false
            tags:
              - key: Name
              - key: kubernetes.io/role/elb
                value: "1"
            vpcIdSelector:
              matchControllerRef: true
      patches:
        - fromFieldPath: spec.parameters.vpc-Name
          policy:
            fromFieldPath: Required
          toFieldPath: "spec.forProvider.tags[0].value"
          transforms:
            - string:
                fmt: private-subnet1-%s
                type: Format
              type: string
          type: FromCompositeFieldPath
        - patchSetName: common-parameters
          type: PatchSet
        - fromFieldPath: spec.parameters.privateSubnet1-cidrBlock
          toFieldPath: spec.forProvider.cidrBlock
          type: FromCompositeFieldPath
        - fromFieldPath: spec.parameters.privateSubnet1-ipv6CIDRBlock
          toFieldPath: spec.forProvider.ipv6CIDRBlock
          type: FromCompositeFieldPath
        - fromFieldPath: spec.parameters.privateSubnet1-availabilityZone
          toFieldPath: spec.forProvider.availabilityZone
          type: FromCompositeFieldPath
        - fromFieldPath: spec.parameters.privateSubnet1-availabilityZone
          toFieldPath: metadata.labels.zone
          type: FromCompositeFieldPath
      readinessChecks:
        - matchCondition:
            status: "True"
            type: Ready
          type: MatchCondition

    - name: private-subnet2
      base:
        apiVersion: ec2.aws.crossplane.io/v1beta1
        kind: Subnet
        metadata:
          labels:
            type: subnet
            visibility: private
        spec:
          forProvider:
            availabilityZone:
            cidrBlock:
            ipv6CIDRBlock:
            mapPublicIpOnLaunch: false
            tags:
              - key: Name
              - key: kubernetes.io/role/elb
                value: "1"
            vpcIdSelector:
              matchControllerRef: true
      patches:
        - fromFieldPath: spec.parameters.vpc-Name
          policy:
            fromFieldPath: Required
          toFieldPath: "spec.forProvider.tags[0].value"
          transforms:
            - string:
                fmt: private-subnet2-%s
                type: Format
              type: string
          type: FromCompositeFieldPath
        - patchSetName: common-parameters
          type: PatchSet
        - fromFieldPath: spec.parameters.privateSubnet2-cidrBlock
          toFieldPath: spec.forProvider.cidrBlock
          type: FromCompositeFieldPath
        - fromFieldPath: spec.parameters.privateSubnet2-ipv6CIDRBlock
          toFieldPath: spec.forProvider.ipv6CIDRBlock
          type: FromCompositeFieldPath
        - fromFieldPath: spec.parameters.privateSubnet2-availabilityZone
          toFieldPath: spec.forProvider.availabilityZone
          type: FromCompositeFieldPath
        - fromFieldPath: spec.parameters.privateSubnet2-availabilityZone
          toFieldPath: metadata.labels.zone
          type: FromCompositeFieldPath
      readinessChecks:
        - matchCondition:
            status: "True"
            type: Ready
          type: MatchCondition

    - name: private-subnet3
      base:
        apiVersion: ec2.aws.crossplane.io/v1beta1
        kind: Subnet
        metadata:
          labels:
            type: subnet
            visibility: private
        spec:
          forProvider:
            availabilityZone:
            cidrBlock:
            ipv6CIDRBlock:
            mapPublicIpOnLaunch: false
            tags:
              - key: Name
              - key: kubernetes.io/role/elb
                value: "1"
            vpcIdSelector:
              matchControllerRef: true
      patches:
        - fromFieldPath: spec.parameters.vpc-Name
          policy:
            fromFieldPath: Required
          toFieldPath: "spec.forProvider.tags[0].value"
          transforms:
            - string:
                fmt: private-subnet3-%s
                type: Format
              type: string
          type: FromCompositeFieldPath
        - patchSetName: common-parameters
          type: PatchSet
        - fromFieldPath: spec.parameters.privateSubnet3-cidrBlock
          toFieldPath: spec.forProvider.cidrBlock
          type: FromCompositeFieldPath
        - fromFieldPath: spec.parameters.privateSubnet3-ipv6CIDRBlock
          toFieldPath: spec.forProvider.ipv6CIDRBlock
          type: FromCompositeFieldPath
        - fromFieldPath: spec.parameters.privateSubnet3-availabilityZone
          toFieldPath: spec.forProvider.availabilityZone
          type: FromCompositeFieldPath
        - fromFieldPath: spec.parameters.privateSubnet3-availabilityZone
          toFieldPath: metadata.labels.zone
          type: FromCompositeFieldPath
      readinessChecks:
        - matchCondition:
            status: "True"
            type: Ready
          type: MatchCondition

    - name: internetgateway
      base:
        apiVersion: ec2.aws.crossplane.io/v1beta1
        kind: InternetGateway
        metadata:
          labels:
            type: internetgateway
        spec:
          forProvider:
            tags:
              - key: Name
            vpcIdSelector:
              matchControllerRef: true
      patches:
        - patchSetName: common-parameters
          type: PatchSet
        - fromFieldPath: spec.parameters.vpc-Name
          policy:
            fromFieldPath: Required
          toFieldPath: "spec.forProvider.tags[0].value"
          transforms:
            - string:
                fmt: igw-%s
                type: Format
              type: string
          type: FromCompositeFieldPath
      readinessChecks:
        - matchCondition:
            status: "True"
            type: Ready
          type: MatchCondition

    - name: single-natgateway
      base:
        apiVersion: ec2.aws.crossplane.io/v1beta1
        kind: NATGateway
        metadata:
          labels:
            type: natgateway
        spec:
          forProvider:
            allocationIdSelector:
              matchLabels:
                type: elasticip
            connectivityType:
            subnetIdSelector:
              matchLabels:
                type: subnet
                visibility: public
            tags:
              - key: Name
      patches:
        - fromFieldPath: spec.parameters.vpc-Name
          policy:
            fromFieldPath: Required
          toFieldPath: "spec.forProvider.tags[0].value"
          transforms:
            - string:
                fmt: nat-gw-%s
                type: Format
              type: string
          type: FromCompositeFieldPath
        - patchSetName: common-parameters
          type: PatchSet
        - fromFieldPath: spec.parameters.publicSubnet1-availabilityZone
          toFieldPath: spec.forProvider.subnetIdSelector.matchLabels.zone
          type: FromCompositeFieldPath
        - fromFieldPath: spec.parameters.nat-connectivityType
          toFieldPath: spec.forProvider.connectivityType
          type: FromCompositeFieldPath
      readinessChecks:
        - matchCondition:
            status: "True"
            type: Ready
          type: MatchCondition

    - name: elastic-ip
      base:
        apiVersion: ec2.aws.crossplane.io/v1beta1
        kind: Address
        metadata:
          labels:
            type: elasticip
        spec:
          forProvider:
            domain: vpc
            tags:
              - key: Name
      patches:
        - patchSetName: common-parameters
          type: PatchSet
        - fromFieldPath: spec.parameters.vpc-Name
          policy:
            fromFieldPath: Required
          toFieldPath: "spec.forProvider.tags[0].value"
          transforms:
            - string:
                fmt: eip-%s
                type: Format
              type: string
          type: FromCompositeFieldPath
      readinessChecks:
        - matchCondition:
            status: "True"
            type: Ready
          type: MatchCondition

    - name: public-route-table
      base:
        apiVersion: ec2.aws.crossplane.io/v1beta1
        kind: RouteTable
        spec:
          forProvider:
            associations:
              - subnetIdSelector:
                  matchControllerRef: true
                  matchLabels:
                    type: subnet
                    visibility: public
                    zone:
              - subnetIdSelector:
                  matchControllerRef: true
                  matchLabels:
                    type: subnet
                    visibility: public
                    zone:
              - subnetIdSelector:
                  matchControllerRef: true
                  matchLabels:
                    type: subnet
                    visibility: public
                    zone:
            routes:
              - destinationCidrBlock: 0.0.0.0/0
                gatewayIdSelector:
                  matchLabels:
                    type: internetgateway
            tags:
              - key: Name
            vpcIdSelector:
              matchControllerRef: true
      patches:
        - fromFieldPath: spec.parameters.vpc-Name
          policy:
            fromFieldPath: Required
          toFieldPath: "spec.forProvider.tags[0].value"
          transforms:
            - string:
                fmt: public-route-%s
                type: Format
              type: string
          type: FromCompositeFieldPath
        - patchSetName: common-parameters
          type: PatchSet
        - fromFieldPath: spec.parameters.publicSubnet1-availabilityZone
          toFieldPath: "spec.forProvider.associations[0].subnetIdSelector.matchLabels.zone"
          type: FromCompositeFieldPath
        - fromFieldPath: spec.parameters.publicSubnet2-availabilityZone
          toFieldPath: "spec.forProvider.associations[1].subnetIdSelector.matchLabels.zone"
          type: FromCompositeFieldPath
        - fromFieldPath: spec.parameters.publicSubnet3-availabilityZone
          toFieldPath: "spec.forProvider.associations[2].subnetIdSelector.matchLabels.zone"
          type: FromCompositeFieldPath
      readinessChecks:
        - matchCondition:
            status: "True"
            type: Ready
          type: MatchCondition

    - name: private-route-table
      base:
        apiVersion: ec2.aws.crossplane.io/v1beta1
        kind: RouteTable
        spec:
          forProvider:
            associations:
              - subnetIdSelector:
                  matchControllerRef: true
                  matchLabels:
                    type: subnet
                    visibility: private
                    zone:
              - subnetIdSelector:
                  matchControllerRef: true
                  matchLabels:
                    type: subnet
                    visibility: private
                    zone:
              - subnetIdSelector:
                  matchControllerRef: true
                  matchLabels:
                    type: subnet
                    visibility: private
                    zone:
            routes:
              - destinationCidrBlock: 0.0.0.0/0
                natGatewayIdSelector:
                  matchLabels:
                    type: natgateway
            tags:
              - key: Name
            vpcIdSelector:
              matchControllerRef: true
      patches:
        - fromFieldPath: spec.parameters.vpc-Name
          policy:
            fromFieldPath: Required
          toFieldPath: "spec.forProvider.tags[0].value"
          transforms:
            - string:
                fmt: private-route-%s
                type: Format
              type: string
          type: FromCompositeFieldPath
        - patchSetName: common-parameters
          type: PatchSet
        - fromFieldPath: spec.parameters.privateSubnet1-availabilityZone
          toFieldPath: "spec.forProvider.associations[0].subnetIdSelector.matchLabels.zone"
          type: FromCompositeFieldPath
        - fromFieldPath: spec.parameters.privateSubnet2-availabilityZone
          toFieldPath: "spec.forProvider.associations[1].subnetIdSelector.matchLabels.zone"
          type: FromCompositeFieldPath
        - fromFieldPath: spec.parameters.privateSubnet3-availabilityZone
          toFieldPath: "spec.forProvider.associations[2].subnetIdSelector.matchLabels.zone"
          type: FromCompositeFieldPath
      readinessChecks:
        - matchCondition:
            status: "True"
            type: Ready
          type: MatchCondition
  writeConnectionSecretsToNamespace: crossplane-system
